# -*- coding: utf-8 -*-
"""deep_music

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fQ2P2ISyhlIvp00eYxKMg6XTEuB5w-FI

#Description
https://towardsdatascience.com/the-deep-music-visualizer-using-sound-to-explore-the-latent-space-of-biggan-198cd37dac9a
#Full set of instructions and documentation
https://github.com/msieg/deep-music-visualizer
# Instructions
1. Run the first cell below to import the script
2. Find the song you want for the video as an mp3 file
(easiest way I've found is to find it on youtube and then use a youtube to mp3)
3. In the file browser go to content -> deep-music-visualizer and drag and drop your mp3 file to this folder
4. Go to runtime -> change runtime type and make sure the hardware accelerator is GPU
5. Run the next two cells
6. Replace the inputfile to match your mp3 name, and replace the outputfile name to match what you want to call the mp4 that will be created
7. Add or delete any parameters you want

#Tips


*   If you run out of CUDA memory on a GPU then you can reduce the batch size using the --batch_size parameter
*   If the cell exits with ^C before it finishes this is most likely because you ran out of RAM space. To get around this you could decrease the resolution of the video or make it shorter
*   If your video downloads and there is sound but no pictures this might be because you overwrote an existing mp4 file in the deep-music-visualizer folder, so change the name of the output mp4 or delete the preexisting one in the folder

# Latent Space Music Visualizer
"""

# Commented out IPython magic to ensure Python compatibility.
!git clone https://github.com/msieg/deep-music-visualizer.git
# %cd /content/deep-music-visualizer
!pip install -r requirements.txt

import torch

"""We will use GPUs to accelerate our computation in this notebook. Run the following to make sure GPUs are enabled:"""

if torch.cuda.is_available():
  print('Good to go!')
else:
  print('Please set GPU via Edit -> Notebook Settings.')

!python visualize.py --song laylayoff.mp3 --use_previous_classes 1 --resolution 512 --tempo_sensitivity 0.3 --pitch_sensitivity 280 --batch 15 --output_file laylayofffaselam2.mp4